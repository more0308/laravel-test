version: "3.8"

networks:
    laravel:

services:
    nginx:
        build:
            context: ./_docker
            dockerfile: nginx.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel}
        restart: unless-stopped
        container_name: nginx
        ports:
            - 8000:8000
        volumes:
            - ./:/var/www/html
            - .env:/var/www/html/.env
        depends_on:
            - php
            - mysql
        networks:
            - laravel

    php:
        build:
            context: ./_docker
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel}
        container_name: php
        ports:
            - ":9000"
        volumes:
            - ./:/var/www/html
            - .env:/var/www/html/.env
        networks:
            - laravel

    mysql:
        image: mariadb:10.6
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports:
            - 3306:3306
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./_docker/mysql:/var/lib/mysql
        networks:
            - laravel

    composer:
        build:
            context: ./_docker
            dockerfile: composer.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel}
        container_name: composer
        volumes:
            - ./:/var/www/html
            - .env:/var/www/html/.env
        working_dir: /var/www/html
        depends_on:
            - php
        user: ${USER:-laravel}
        profiles: ["composer"]
        entrypoint: ['composer', '--ignore-platform-reqs']
        networks:
            - laravel

    artisan:
        build:
            context: ./_docker
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel}
        container_name: artisan
        volumes:
            - ./:/var/www/html
            - .env:/var/www/html/.env
        depends_on:
            - mysql
        working_dir: /var/www/html
        profiles: ["artisan"]
        entrypoint: ['php', '/var/www/html/artisan']
        networks:
            - laravel

    npm:
        image: node:alpine
        container_name: npm
        volumes:
            - ./:/var/www/html
            - .env:/var/www/html/.env
        ports:
            - 3000:3000
            - 3001:3001
        working_dir: /var/www/html
        entrypoint: ['npm', 'run', 'dev']
        networks:
            - laravel

